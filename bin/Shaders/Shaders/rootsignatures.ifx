#define bindlessRS\
    "RootFlags(CBV_SRV_UAV_HEAP_DIRECTLY_INDEXED | SAMPLER_HEAP_DIRECTLY_INDEXED),"\
    "RootConstants(b0, num32BitConstants=64, visibility=SHADER_VISIBILITY_ALL),"\
    "StaticSampler(s0, filter = FILTER_MIN_MAG_MIP_POINT, addressU = TEXTURE_ADDRESS_CLAMP, addressV = TEXTURE_ADDRESS_CLAMP, addressW = TEXTURE_ADDRESS_CLAMP, mipLODBias = 0.0f, minLOD = 0.0f, maxLOD = 100.0f)," \
    "StaticSampler(s1, filter = FILTER_MIN_MAG_MIP_POINT, addressU = TEXTURE_ADDRESS_WRAP, addressV = TEXTURE_ADDRESS_WRAP, addressW = TEXTURE_ADDRESS_WRAP,  mipLODBias = 0.0f, minLOD = 0.0f, maxLOD = 100.0f)," \
    "StaticSampler(s2, filter = FILTER_MIN_MAG_MIP_LINEAR, addressU = TEXTURE_ADDRESS_WRAP, addressV = TEXTURE_ADDRESS_WRAP, addressW = TEXTURE_ADDRESS_WRAP,  mipLODBias = 0.0f, minLOD = 0.0f, maxLOD = 100.0f), " \
    "StaticSampler(s3, filter = FILTER_MIN_MAG_LINEAR_MIP_POINT, addressU = TEXTURE_ADDRESS_CLAMP, addressV = TEXTURE_ADDRESS_CLAMP, addressW = TEXTURE_ADDRESS_WRAP,  mipLODBias = 0.0f, minLOD = 0.0f, maxLOD = 100.0f), " \
    "StaticSampler(s4, filter = FILTER_MIN_MAG_LINEAR_MIP_POINT, addressU = TEXTURE_ADDRESS_CLAMP, addressV = TEXTURE_ADDRESS_CLAMP, addressW = TEXTURE_ADDRESS_CLAMP)," \
    "StaticSampler(s5, filter = FILTER_MIN_MAG_LINEAR_MIP_POINT, addressU = TEXTURE_ADDRESS_WRAP, addressV = TEXTURE_ADDRESS_WRAP, addressW = TEXTURE_ADDRESS_WRAP)," \
    "StaticSampler(s6, filter = FILTER_MIN_MAG_POINT_MIP_LINEAR, addressU = TEXTURE_ADDRESS_WRAP, addressV = TEXTURE_ADDRESS_WRAP, addressW = TEXTURE_ADDRESS_WRAP), " \
    "StaticSampler(s7, filter = FILTER_MIN_MAG_POINT_MIP_LINEAR, addressU = TEXTURE_ADDRESS_CLAMP, addressV = TEXTURE_ADDRESS_CLAMP, addressW = TEXTURE_ADDRESS_CLAMP), " \
    "StaticSampler(s8, filter = FILTER_ANISOTROPIC, maxAnisotropy = 16)"

/*
#define coreEffectRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "CBV(b0, space=0, visibility = SHADER_VISIBILITY_VERTEX),"\
    "CBV(b0, space=1, visibility = SHADER_VISIBILITY_PIXEL),"\
    "CBV(b1, space=1, visibility = SHADER_VISIBILITY_PIXEL),"\
    "DescriptorTable( SRV(t8), visibility = SHADER_VISIBILITY_ALL )," \
    "DescriptorTable( SRV(t33), visibility = SHADER_VISIBILITY_ALL )," \
    "StaticSampler(s0, " \
                   "addressU = TEXTURE_ADDRESS_WRAP, " \
                   "addressV = TEXTURE_ADDRESS_WRAP, " \
                   "filter = FILTER_ANISOTROPIC )"

#define shadowMappingRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "CBV(b0, visibility = SHADER_VISIBILITY_VERTEX)"

#define worldTransformRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "CBV(b0, visibility = SHADER_VISIBILITY_VERTEX)"

#define doorRS\
    "RootFlags(ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT),"\
    "CBV(b0, space=0),"\
    "CBV(b0, space=1),"\
    "DescriptorTable( SRV(t8), visibility = SHADER_VISIBILITY_PIXEL )," \
    "StaticSampler(s0, " \
                   "addressU = TEXTURE_ADDRESS_WRAP, " \
                   "addressV = TEXTURE_ADDRESS_WRAP, " \
                   "filter = FILTER_ANISOTROPIC )"

#define forceFieldRS\
    "RootFlags(ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT),"\
    "CBV(b0, space=0, visibility = SHADER_VISIBILITY_VERTEX),"\
    "CBV(b0, space=1, visibility = SHADER_VISIBILITY_PIXEL),"\
    "DescriptorTable( SRV(t8), visibility = SHADER_VISIBILITY_PIXEL )," \
    "StaticSampler(s0, " \
                   "addressU = TEXTURE_ADDRESS_WRAP, " \
                   "addressV = TEXTURE_ADDRESS_WRAP, " \
                   "filter = FILTER_ANISOTROPIC )"

#define laserRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "CBV(b0, space=0),"\
    "CBV(b0, space=1)"

#define gunRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "CBV(b0, space=0),"\
    "CBV(b0,  space=1),"\
    "CBV(b1,  space=1)"

#define particleSystemRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "SRV(t0),"\
    "CBV(b0),"\
    "CBV(b1),"\
    "DescriptorTable( SRV(t8), visibility = SHADER_VISIBILITY_PIXEL )," \
    "StaticSampler(s0, " \
               "addressU = TEXTURE_ADDRESS_WRAP, " \
               "addressV = TEXTURE_ADDRESS_WRAP, " \
               "filter = FILTER_ANISOTROPIC )"

#define sdfFontRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "CBV(b0, space=0),"\
    "DescriptorTable( SRV(t8), visibility = SHADER_VISIBILITY_PIXEL )," \
    "StaticSampler(s0, " \
               "addressU = TEXTURE_ADDRESS_WRAP, " \
               "addressV = TEXTURE_ADDRESS_WRAP, " \
               "filter = FILTER_ANISOTROPIC )"

#define simpleEffectRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "CBV(b0, space=0, visibility = SHADER_VISIBILITY_ALL),"\
    "CBV(b1, space=0, visibility = SHADER_VISIBILITY_ALL),"\
    "CBV(b2, space=0, visibility = SHADER_VISIBILITY_ALL),"\
    "CBV(b0, space=1, visibility = SHADER_VISIBILITY_ALL),"\
    "CBV(b1, space=1, visibility = SHADER_VISIBILITY_ALL),"\
    "DescriptorTable( SRV(t8), visibility = SHADER_VISIBILITY_All )," \
    "DescriptorTable( SRV(t32), visibility = SHADER_VISIBILITY_ALL )," \
    "DescriptorTable( SRV(t33), visibility = SHADER_VISIBILITY_ALL )," \
    "StaticSampler(s0, " \
               "addressU = TEXTURE_ADDRESS_WRAP, " \
               "addressV = TEXTURE_ADDRESS_WRAP, " \
               "filter = FILTER_ANISOTROPIC )," \
    "StaticSampler(s1, " \
               "addressU = TEXTURE_ADDRESS_WRAP, " \
               "addressV = TEXTURE_ADDRESS_WRAP, " \
               "filter = FILTER_ANISOTROPIC )"


#define skyDomeRS\
    "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT ),"\
    "CBV(b0) ,"\
    "DescriptorTable( SRV(t0), visibility = SHADER_VISIBILITY_PIXEL )," \
    "StaticSampler(s0, " \
       "addressU = TEXTURE_ADDRESS_WRAP, " \
       "addressV = TEXTURE_ADDRESS_WRAP, " \
       "filter = FILTER_ANISOTROPIC )"
*/
